@implements IDisposable

@if (CompletesAtUtc != null)
{
    <div>@timeLeftText</div>
}

@code {
    [Parameter]
    public required DateTime? CompletesAtUtc { get; set; }

    [Parameter]
    public Action? Callback { get; set; }

    bool active = false;

    string timeLeftText = "";

    protected override void OnInitialized()
    {
        active = true;
        Task.Run(UpdateProgress);
    }

    async Task UpdateProgress()
    {
        while (active)
        {
            if (CompletesAtUtc.HasValue)
            {
                var timeLeft = CompletesAtUtc.Value - DateTime.UtcNow;
                timeLeftText = $"{Math.Round(timeLeft.TotalSeconds, 1)}s";
                StateHasChanged();
                if(timeLeft < TimeSpan.Zero)
                {
                    Callback?.Invoke();
                }
            }
            await Task.Delay(100);
        }
    }

    public void Dispose()
    {
        active = false;
    }
}
