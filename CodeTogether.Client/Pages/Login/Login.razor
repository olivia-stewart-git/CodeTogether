@page "/account/login"
@using CodeTogether.Client.Integration.Authentication
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Login</h1>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (loginFailed)
{
    <p class="text-danger">@message</p>
}

@code {
    private bool loginFailed;
    private string message = "Login failed.";
    private readonly LoginRequestDTO loginModel = new ();

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("/api/account/login", loginModel);
        loginFailed = !response.IsSuccessStatusCode;
        message = response.ReasonPhrase + await response.Content.ReadAsStringAsync();
        var dtoResponse = await response.Content.ReadFromJsonAsync<LoginResponseDTO>();
        if (dtoResponse != null)
        {
            if (dtoResponse.IsAuthenticated)
            {
                NavigationManager.NavigateTo("/");
            } else
            {
                message = dtoResponse.Message;
                loginFailed = true;
            }
        }
    }
}