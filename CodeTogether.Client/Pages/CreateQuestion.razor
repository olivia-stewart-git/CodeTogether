@page "/questionEditor"
@using CodeTogether.Client.Integration.Execution

<div class="card">
    <div class="card-body" style="margin-left:5px">
        <h5 class="card-title">Question Editor</h5>
    
        <form style="margin-left:5px">
            <div class="form-group">
                <label for="questionName">QuestionName</label>
                <input type="text" class="form-control" id="questionName" aria-describedby="questionHelp">
                <small id="questionHelp" class="form-text text-muted">Name of the question</small>
            </div>
            <div class="form-group">
                <label for="questionDescription">Description</label>
                <textarea class="form-control" id="questionDescription" rows="4"></textarea>
            </div>

            <div class="form-group" style="margin-top:5px">
                <label>Function Signature</label>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="returnTypeLabel">Return Type</span>
                    </div>
                    <input type="text" class="form-control" id="returnType" @bind=returnType>
                </div>
                @for (int i = 0; i < arguments.Count; i++)
                {
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="argument@(i)label">Argument</span>
                        </div>
                        <input type="text" placeholder="arg name" class="form-control" id="argument@(i)" @onchange="(e) => ArgumentNameChanged(e, i)">
                        <input type="text" placeholder="type" class="form-control" id="argument@(i)" @onchange="(e) => ArgumentTypeChanged(e, i)">
                    </div>
                }
                <button type="button" class="btn btn-secondary btn-block" @onclick="AddArgument">Add Argument</button>
            </div>

            <div class="form-group" style="margin-top:5px">
                <button class="btn btn-primary">Create</button>
            </div>
        </form>
    </div>
</div>

@code {
    List<TestCaseDto> testCases = new List<TestCaseDto>();

    string returnType = "void";
    List<(string, string)> arguments = new ();

    void AddArgument()
    {
        arguments.Add(($"argument{arguments.Count + 1}", "int"));
        StateHasChanged();
    }

    void ArgumentNameChanged (ChangeEventArgs e, int index)
    {
        arguments[index] = (e.Value.ToString(), arguments[index].Item2);
    }

    void ArgumentTypeChanged(ChangeEventArgs e, int index)
    {
        arguments[index] = (arguments[index].Item1, e.Value.ToString());
    }
}
